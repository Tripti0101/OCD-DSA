ques1 Two sum 

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n=nums.size();
        vector<int>idx;
        for(int i=0;i<n-1;i++) {
            for(int j=i+1;j<n;j++){
                if(nums[i]+nums[j]==target){
                    idx.push_back(i);
                    idx.push_back(j);
                }
            }
        }
        return idx;
    }
};

//T.C=O(n^2)
//S.C=O(1)

ques2 Sort colors

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int n=nums.size();
        int nc0=0;
        int nc1=0;
        int nc2=0;
        int idx=0;
        for(int i=0;i<n;i++) {
            if(nums[i]==0) {
                nc0++;
            }
            if(nums[i]==1) {
                nc1++;
            }
            if(nums[i]==2) {
                nc2++;
            }
        }
        for(int i=0;i<nc0;i++){
            nums[idx++]=0;
        }
        for(int i=0;i<nc1;i++){
            nums[idx++]=1;
        }
        for(int i=0;i<nc2;i++){
            nums[idx++]=2;
        }
    }
};

//T.C=O(n)
//S.C=O(1)

ques3 maximum score from subarray 

class Solution {
  public:
    int pairWithMaxSum(vector<int> &arr) {
        int n=arr.size();
        if(n<2) 
        return -1;
        int m=-1;
        for(int i=0;i<n-1;i++){
            m=max(m,arr[i]+arr[i+1]);
        }
        return m;
    }
};

//T.C=O(n)
//S.C=O(1)


