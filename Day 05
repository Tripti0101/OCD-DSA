ques1 distribute money to maximum cildren 

class Solution {
public:
    int distMoney(int money, int children) {
         if(money<children)
        return -1;
        int remaining=money-children;
        int ans=0;
        while(remaining>=7 && ans<children)
        {
            ans++;
            remaining-=7;
        }
        if((remaining>0 && ans==children) || (remaining==3 && children-ans==1)) 
        ans--;
        return ans;
    }
};

//T.C=O(1)
//S.C=O(1)

ques2 longest palindrome 

class Solution {
public:
    int longestPalindrome(string s) {
         map<char,int>m;
        int count=0;
        for(int i=0;i<s.size();i++){
            m[s[i]]++;
        }
        for(auto i:m){
            if(i.second>1) {
                if(i.second%2==0){
                count+=i.second;
                }
            else if(i.second%2!=0 && i.second==s.length())
             return i.second;          
            else if(i.second>1 && i.second%2!=0){
                count=count+i.second-1;
            }
            }
        }
           if(count<s.length()) 
           return count+1;
            else 
            return count;      
        }
    };

//T.C=O(n)
//S.C=O(n) 
