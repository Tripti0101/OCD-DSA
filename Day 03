ques1 flipping an image

class Solution {
public:
    vector<vector<int>> flipAndInvertImage(vector<vector<int>>& image) {
        int n=image.size();
        for(int i=0;i<n;i++) {
            int left=0, right=n-1;
            while(left<=right) {
                swap(image[i][left],image[i][right]);
                image[i][left]^=1;
                if(left!=right)
                image[i][right]^=1;
                left++;
                right--;
            }
        }
        return image;
    }
};

//T.C=O(n^2)
//S.C=O(1)

ques2 number of equivalent dominoes pair 

class Solution {
public:
    int numEquivDominoPairs(vector<vector<int>>& dominoes) {
        int n = dominoes.size();
        for(int i=0;i<n;i++) {
            if(dominoes[i][0]>dominoes[i][1]){
                swap(dominoes[i][0],dominoes[i][1]);
            }
        }
        sort(dominoes.begin(),dominoes.end());
        int count=0;
        int c=1;
        for(int i=1;i<n;i++) {
            if(dominoes[i][0]==dominoes[i-1][0] &&dominoes[i][1]==dominoes[i-1][1]){
                count+=c;
                c++;
            }
            else {
                c=1;
            }
        }
        return count;
    }
};

//T.C=O(nlogn)
//S.C=O(1)
