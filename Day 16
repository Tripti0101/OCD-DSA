ques1 median in a row-wise sorted matrix 

class Solution {
  public:
    int median(vector<vector<int>> &mat) {
         vector<int> v;
         for(int i=0;i<mat.size();i++){
             for(int j=0;j<mat[i].size();j++){
                 v.push_back(mat[i][j]);
             }
         }
         sort(v.begin(),v.end());
        return v[v.size()/2];
    }
};

ques2 find a peak element 

class Solution {
public:
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int n=mat.size();    
        int m=mat[0].size();   
        for(int i=0; i<n; i++) {
            for(int j=0; j<m; j++) {
                int up=-1, down=-1, left=-1, right=-1;
                if(i>0) {
                    up=mat[i-1][j];
                }
                if(i<n-1) {
                    down=mat[i+1][j];
                }
                if(j>0) {
                    left=mat[i][j-1];
                }
                if(j<m-1) {
                    right=mat[i][j+1];
                }
                if(mat[i][j]>up && mat[i][j]>down && mat[i][j]>left && mat[i][j]>right) {
                    return {i,j};
                }
            }
        }
        return {-1,-1}; 
    }
};

//T.C=O(n*m)
//S.C=O(1)
